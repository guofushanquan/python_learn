"""
题目描述：计算字符串字串出现的次数
编写者：gfsq
时间：2025-10-16
"""

str1=input("请输入第一个字符串")
str2=input("请输入第二个字符串")
print(str1.count(str2))
"""
请输入第一个字符串DDDugvadas
请输入第二个字符串DD
1
"""

"""
只要是序列都可以使用
"""
list1=[1,2,3,4,4,5,6,7,3,3,3]
print(list1.count(3))
tuple1=(13,14,5,6,57,6,76,7,4,5465,5,5,5,6)
print(tuple1.count(5))
"""
输出为
4
4

"""

"""
str.count(sub) 是 Python 字符串的内置方法，用于统计子字符串 sub 在当前字符串中出现的次数，返回值为非负整数（0 表示未出现）。
字符串.count(子字符串, start=0, end=len(字符串))
sub（必选）：要统计的子字符串（字符串类型，长度 ≥ 1）；
start（可选）：统计的起始位置（索引，默认从 0 开始）；
end（可选）：统计的结束位置（索引，默认到字符串末尾，不包含 end 本身）。
如果统计空字符串 ""，count() 会返回字符串长度 + 1（因为空字符串可视为存在于每个字符的前后及字符串首尾）：
s = "abc"
print(s.count(""))  # 输出：4（位置：开头、a后、b后、c后）
list ,str,tuple都可以用count()方法
"""

"""
Python 中的 “序列” 是指有序、可索引、可迭代的数据类型，主要分为两类：可变序列和不可变序列。其中，以下序列类型原生支持 count() 方法：
序列类别	具体类型	是否支持 count()	核心特点
不可变序列	字符串（str）	是	字符组成，不可修改
元组（tuple）	是	任意元素，不可修改
范围（range）	否	整数序列，生成式，不可修改
可变序列	列表（list）	是	任意元素，可修改（增删改）
字节数组（bytearray）	是	字节组成，可修改（二进制场景）
数组（array.array）	是	同类型数值，高效存储
"""


"""
字典（dict）不属于序列类型，它是 Python 中另一种核心数据类型 ——映射类型（Mapping Type），与序列的本质区别在于 “数据组织方式” 和 “访问逻辑” 完全不同。
"""
"""
序列的 “可迭代”（iterable）是指序列可以被遍历（逐个访问其中的元素）
，这是 Python 中 “可迭代对象” 的核心特性。简单说，“可迭代” 意味着你可以用 for 循环逐个取出序列中的元素，而不需要手动计算索引位置。
"""
